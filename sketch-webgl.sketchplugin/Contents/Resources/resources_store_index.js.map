{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/store/artboard.js","webpack:///./resources/store/assets.js","webpack:///./resources/store/groupAssets.js","webpack:///./resources/store/imageAssets.js","webpack:///./resources/store/index.js","webpack:///./resources/store/shapeAssets.js"],"names":["processMask","layer","sketch","Promise","resolve","reject","sketchObject","hasClippingMask","maskIndex","index","maskParent","parent","setHasClippingMask","maskGroup","Group","name","frame","layers","duplicate","splice","forEach","maskedLayer","x","y","push","isPathClockwise","points","end","length","sum","point","i","n","flattenShapePath","isClockwise","reversePath","transform","rotation","flippedHorizontally","flippedVertically","svgPath","getSVGPath","flatPath","ShapePath","fromSVGPath","remove","processShapePathBorderOptions","style","borderOptions","dashPattern","startArrowhead","endArrowhead","layersByConvertingToOutlines","outlines","simplify","processShapePath","type","then","layerS1","layerS2","processShapeBase","canFlatten","flatten","ungroup","ungrouped","processShape","processRelevant","processHidden","isHidden","hidden","processSymbol","detach","recursively","processText","text","trim","layerIndex","processLayer","page","layerS3","layerS4","layerS5","layerS6","layerS7","processLayers","promises","all","getArtboard","artboard","clearLayerStyles","textColor","setTextBehaviour","opacity","borders","fills","shadows","innerShadows","blur","blurType","radius","motionAngle","center","enabled","generateImageAsset","id","prefix","scale","buffer","formats","scales","output","bufferImg","Image","image","base64","nsdata","base64EncodedStringWithOptions","base64String","src","createGradientBorderImage","border","gradientOpacity","padding","position","thickness","gradientImage","Object","assign","width","height","fillType","gradient","imageAsset","createGradientFillImage","createPatternFillImage","pattern","fillOpacity","patternImage","color","processLayerBorderGradient","borderIndex","contextSettings","gradientBorderImage","processLayerFillGradient","fill","fillIndex","gradientFillImage","processLayerFillPattern","patternFillImage","processLayerFill","layerImage","processLayerFills","processLayerBorder","processLayerBorders","layerImages","processImageLayerAssets","imageLayerImages","processShapeLayerAssets","shapeLayerImages","processGroupLayerAssets","groupLayerImages","getAssets","images","reduce","imageArray","layerImageArray","processLayerImage","baseImage","fillImages","newImages","filter","fillImage","borderImages","borderImage","getStore","srmPage","Page","srmArtboard","background","includedInExport","console","log","selected"],"mappings":"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","file":"resources_store_index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/store/index.js\");\n","const processMask = ({ layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        if (layer && layer.sketchObject.hasClippingMask()) {\n            const maskIndex = layer.index;\n            const maskParent = layer.parent;\n            layer.sketchObject.setHasClippingMask(false);\n            // create new group to mimic mask behavior\n            const maskGroup = new sketch.Group({\n                name: 'srm.mask',\n                frame: layer.frame,\n                layers: [layer.duplicate()]\n            });\n            // splice in mask group, splice out old mask\n            maskParent.layers.splice(maskIndex, 1, maskGroup);\n            // loop through mask parent layers,\n            // any layer with an index higher than the mask will be masked\n            // push masked layers to maskGroup\n            maskGroup.parent.layers.forEach((maskedLayer, index) => {\n                if (index > maskIndex) {\n                    maskedLayer.frame.x = maskedLayer.frame.x - maskGroup.frame.x;\n                    maskedLayer.frame.y = maskedLayer.frame.y - maskGroup.frame.y;\n                    maskGroup.layers.push(maskedLayer);\n                }\n            });\n            resolve(maskGroup);\n        }\n        else {\n            resolve(layer);\n        }\n    });\n};\nconst isPathClockwise = (points) => {\n    let end = points.length - 1;\n    let sum = points[end].point.x * points[0].point.y - points[0].point.x * points[end].point.y;\n    for (let i = 0; i < end; i++) {\n        const n = i + 1;\n        sum += points[i].point.x * points[n].point.y - points[n].point.x * points[i].point.y;\n    }\n    return sum > 0;\n};\nconst flattenShapePath = ({ layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        // due to the way PIXI draws lines\n        // the path must be clockwise to render correctly\n        const isClockwise = isPathClockwise(layer.points);\n        if (!isClockwise) {\n            layer.sketchObject.reversePath();\n        }\n        const duplicate = layer.duplicate();\n        duplicate.transform.rotation = 0;\n        duplicate.transform.flippedHorizontally = false;\n        duplicate.transform.flippedVertically = false;\n        const svgPath = duplicate.getSVGPath();\n        const flatPath = sketch.ShapePath.fromSVGPath(svgPath);\n        layer.points = flatPath.points;\n        duplicate.remove();\n        resolve(layer);\n    });\n};\nconst processShapePathBorderOptions = ({ layer }) => {\n    return new Promise((resolve, reject) => {\n        const { parent, index, style } = layer;\n        const { borderOptions } = style;\n        if (borderOptions.dashPattern.length > 0 || borderOptions.startArrowhead !== 'None' || borderOptions.endArrowhead !== 'None') {\n            layer.sketchObject.layersByConvertingToOutlines();\n            const outlines = parent.layers[index];\n            outlines.name = `[srm.with-border-options]${layer.name}`;\n            outlines.sketchObject.simplify();\n            resolve(outlines);\n        }\n        else {\n            resolve(layer);\n        }\n    });\n};\nconst processShapePath = ({ layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        if (layer && layer.type === 'ShapePath') {\n            flattenShapePath({\n                layer: layer,\n                sketch: sketch\n            })\n                .then((layerS1) => {\n                return processShapePathBorderOptions({\n                    layer: layerS1\n                });\n            })\n                .then((layerS2) => {\n                resolve(layerS2);\n            });\n        }\n        else {\n            resolve(layer);\n        }\n    });\n};\nconst processShapeBase = ({ layer }) => {\n    return new Promise((resolve, reject) => {\n        const { style, parent, index } = layer;\n        if (layer.sketchObject.canFlatten()) {\n            layer.sketchObject.flatten();\n            resolve(parent.layers[index]);\n        }\n        else {\n            if (layer.layers.length === 1) {\n                layer.sketchObject.ungroup();\n                const ungrouped = parent.layers[index];\n                ungrouped.style = style;\n                resolve(ungrouped);\n            }\n            else {\n                resolve(layer);\n            }\n        }\n    });\n};\nconst processShape = ({ layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        if (layer && layer.type === 'Shape') {\n            processShapeBase({\n                layer: layer\n            })\n                // .then((layerS1) => {\n                //   if (layerS1.type === 'Shape') {\n                //     return processShapeLayers({\n                //       layer: layerS1 as srm.Shape,\n                //       sketch: sketch\n                //     });\n                //   } else {\n                //     resolve(layerS1);\n                //   }\n                // })\n                .then((layerS2) => {\n                resolve(layerS2);\n            });\n        }\n        else {\n            resolve(layer);\n        }\n    });\n};\nconst processRelevant = ({ layer }) => {\n    return new Promise((resolve, reject) => {\n        switch (layer.type) {\n            case 'Group':\n            case 'Shape':\n            case 'Image':\n            case 'ShapePath':\n            case 'Text':\n            case 'SymbolInstance':\n                resolve(layer);\n                break;\n            case 'HotSpot':\n            case 'Slice':\n                layer.remove();\n                resolve(null);\n                break;\n        }\n    });\n};\nconst processHidden = ({ layer }) => {\n    return new Promise((resolve, reject) => {\n        const isHidden = layer && layer.hidden;\n        if (isHidden) {\n            layer.remove();\n            resolve(null);\n        }\n        else {\n            resolve(layer);\n        }\n    });\n};\nconst processSymbol = ({ layer }) => {\n    return new Promise((resolve, reject) => {\n        if (layer && layer.type === 'SymbolInstance') {\n            resolve(layer.detach({\n                recursively: true\n            }));\n        }\n        else {\n            resolve(layer);\n        }\n    });\n};\nconst processText = ({ layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        if (layer && layer.type === 'Text') {\n            if (layer.text.trim().length === 0) {\n                layer.remove();\n                resolve(null);\n            }\n            else {\n                const layerIndex = layer.index;\n                const parent = layer.parent;\n                layer.sketchObject.layersByConvertingToOutlines();\n                const outlines = parent.layers[layerIndex];\n                outlines.name = `[srm.text]${layer.name}`;\n                // because sketch is bugged\n                outlines.sketchObject.simplify();\n                // because pixi is bugged\n                outlines.sketchObject.reversePath();\n                resolve(outlines);\n            }\n        }\n        else {\n            resolve(layer);\n        }\n    });\n};\nconst processLayer = ({ layer, sketch, page }) => {\n    return new Promise((resolve, reject) => {\n        processRelevant({\n            layer: layer\n        })\n            .then((layerS1) => {\n            return processHidden({\n                layer: layerS1\n            });\n        })\n            .then((layerS2) => {\n            return processSymbol({\n                layer: layerS2\n            });\n        })\n            .then((layerS3) => {\n            return processShape({\n                layer: layerS3,\n                sketch: sketch\n            });\n        })\n            .then((layerS4) => {\n            return processShapePath({\n                layer: layerS4,\n                sketch: sketch\n            });\n        })\n            .then((layerS5) => {\n            return processMask({\n                layer: layerS5,\n                sketch: sketch\n            });\n        })\n            .then((layerS6) => {\n            return processText({\n                layer: layerS6,\n                sketch: sketch\n            });\n        })\n            .then((layerS7) => {\n            if (layerS7 && layerS7.type === 'Group') {\n                processLayers({\n                    layers: layerS7.layers,\n                    sketch: sketch,\n                    page: page\n                })\n                    .then(() => {\n                    resolve();\n                });\n            }\n            else {\n                resolve();\n            }\n        });\n    });\n};\nconst processLayers = ({ layers, sketch, page }) => {\n    const promises = [];\n    layers.forEach((layer) => {\n        promises.push(processLayer({\n            layer: layer,\n            sketch: sketch,\n            page: page\n        }));\n    });\n    return Promise.all(promises);\n};\nconst getArtboard = ({ artboard, sketch, page }) => {\n    return new Promise((resolve, reject) => {\n        processLayers({\n            layers: artboard.layers,\n            sketch: sketch,\n            page: page\n        })\n            .then(() => {\n            resolve();\n        });\n    });\n};\nexport default getArtboard;\n","import processImageLayerAssets from './imageAssets';\nimport processShapeLayerAssets from './shapeAssets';\nimport processGroupLayerAssets from './groupAssets';\nexport const clearLayerStyles = ({ layer, page }) => {\n    return new Promise((resolve, reject) => {\n        const { style, transform } = layer;\n        if (layer.type === 'Text') {\n            style.textColor = '#000000ff';\n            layer.sketchObject.setTextBehaviour(0);\n        }\n        // @ts-ignore\n        layer.parent = page;\n        style.opacity = 1;\n        style.borders = [];\n        style.fills = [];\n        style.shadows = [];\n        style.innerShadows = [];\n        style.blur = {\n            blurType: 'Gaussian',\n            radius: 0,\n            motionAngle: 0,\n            center: { x: 0, y: 0 },\n            enabled: false\n        };\n        transform.flippedHorizontally = false;\n        transform.flippedVertically = false;\n        transform.rotation = 0;\n        resolve(layer);\n    });\n};\nexport const generateImageAsset = ({ layer, sketch, id, prefix, scale }) => {\n    return new Promise((resolve, reject) => {\n        // create buffer from layer\n        const buffer = sketch.export(layer, {\n            formats: 'png',\n            scales: scale ? scale : '1',\n            output: false,\n            ['save-for-web']: true\n        });\n        // create image layer from buffer\n        const bufferImg = new sketch.Image({\n            image: buffer\n        });\n        // get base64 from image layer nsdata\n        const base64 = bufferImg.image.nsdata.base64EncodedStringWithOptions(0);\n        // create base64 string\n        const base64String = `data:image/png;base64,${base64}`;\n        // return final image\n        resolve({\n            id: prefix ? `${prefix}${id}` : id,\n            src: base64String,\n        });\n    });\n};\nconst createGradientBorderImage = ({ page, layer, border, gradientOpacity, sketch, prefix }) => {\n    return new Promise((resolve, reject) => {\n        const padding = () => {\n            switch (border.position) {\n                case 'Outside':\n                    return border.thickness;\n                case 'Center':\n                    return border.thickness / 2;\n                case 'Inside':\n                    return 0;\n            }\n        };\n        // create new layer with gradient\n        const gradientImage = new sketch.ShapePath({\n            parent: page,\n            frame: Object.assign(Object.assign({}, layer.frame), { width: layer.frame.width + padding(), height: layer.frame.height + padding() }),\n            style: {\n                fills: [{\n                        fillType: 'Gradient',\n                        gradient: border.gradient\n                    }],\n                borders: [],\n                opacity: gradientOpacity\n            }\n        });\n        // export image to temp dir\n        generateImageAsset({\n            layer: gradientImage,\n            sketch: sketch,\n            id: layer.id,\n            prefix: prefix\n        })\n            .then((imageAsset) => {\n            // remove image from page\n            gradientImage.remove();\n            // return final image\n            resolve(imageAsset);\n        });\n    });\n};\nconst createGradientFillImage = ({ page, layer, gradient, gradientOpacity, sketch, prefix }) => {\n    return new Promise((resolve, reject) => {\n        // create new layer with gradient\n        const gradientImage = new sketch.ShapePath({\n            parent: page,\n            frame: layer.frame,\n            style: {\n                fills: [{\n                        fillType: 'Gradient',\n                        gradient: gradient\n                    }],\n                borders: [],\n                opacity: gradientOpacity\n            }\n        });\n        // export image to temp dir\n        generateImageAsset({\n            layer: gradientImage,\n            sketch: sketch,\n            id: layer.id,\n            prefix: prefix\n        })\n            .then((imageAsset) => {\n            // remove image from page\n            gradientImage.remove();\n            // return final image\n            resolve(imageAsset);\n        });\n    });\n};\nconst createPatternFillImage = ({ page, layer, pattern, fillOpacity, sketch, prefix }) => {\n    return new Promise((resolve, reject) => {\n        // create new layer with pattern\n        // add transparent border to include any layer whitespace\n        const patternImage = new sketch.ShapePath({\n            parent: page,\n            frame: layer.frame,\n            style: {\n                fills: [{\n                        fillType: 'Pattern',\n                        pattern: pattern\n                    }],\n                borders: [{\n                        fillType: 'Color',\n                        position: 'Inside',\n                        color: '#00000001'\n                    }],\n                opacity: fillOpacity\n            }\n        });\n        // generate base64 image from layer\n        generateImageAsset({\n            layer: patternImage,\n            sketch: sketch,\n            id: layer.id,\n            prefix: prefix\n        })\n            .then((imageAsset) => {\n            // remove image from page\n            patternImage.remove();\n            // return final base64 image\n            resolve(imageAsset);\n        });\n    });\n};\nconst processLayerBorderGradient = ({ page, layer, border, borderIndex, sketch }) => {\n    return new Promise((resolve, reject) => {\n        createGradientBorderImage({\n            page: page,\n            layer: layer,\n            border: border,\n            gradientOpacity: border.sketchObject.contextSettings().opacity(),\n            sketch: sketch,\n            prefix: `[border-${borderIndex}]`\n        })\n            .then((gradientBorderImage) => {\n            resolve(gradientBorderImage);\n        });\n    });\n};\nconst processLayerFillGradient = ({ page, layer, fill, fillIndex, sketch }) => {\n    return new Promise((resolve, reject) => {\n        createGradientFillImage({\n            page: page,\n            layer: layer,\n            gradient: fill.gradient,\n            gradientOpacity: fill.sketchObject.contextSettings().opacity(),\n            sketch: sketch,\n            prefix: `[fill-${fillIndex}]`\n        })\n            .then((gradientFillImage) => {\n            resolve(gradientFillImage);\n        });\n    });\n};\nconst processLayerFillPattern = ({ page, layer, fill, fillIndex, sketch }) => {\n    return new Promise((resolve, reject) => {\n        if (fill.pattern.image) {\n            createPatternFillImage({\n                page: page,\n                layer: layer,\n                pattern: fill.pattern,\n                fillOpacity: fill.sketchObject.contextSettings().opacity(),\n                sketch: sketch,\n                prefix: `[fill-${fillIndex}]`\n            })\n                .then((patternFillImage) => {\n                resolve(patternFillImage);\n            });\n        }\n        else {\n            resolve(null);\n        }\n    });\n};\nconst processLayerFill = ({ page, layer, fill, fillIndex, sketch }) => {\n    return new Promise((resolve, reject) => {\n        switch (fill.fillType) {\n            case 'Pattern':\n                processLayerFillPattern({\n                    page: page,\n                    layer: layer,\n                    fill: fill,\n                    fillIndex: fillIndex,\n                    sketch: sketch\n                })\n                    .then((layerImage) => {\n                    resolve(layerImage);\n                });\n                break;\n            case 'Gradient':\n                processLayerFillGradient({\n                    page: page,\n                    layer: layer,\n                    fill: fill,\n                    fillIndex: fillIndex,\n                    sketch: sketch\n                })\n                    .then((layerImage) => {\n                    resolve(layerImage);\n                });\n                break;\n            case 'Color':\n                resolve(null);\n                break;\n        }\n    });\n};\nexport const processLayerFills = ({ page, layer, sketch, fills }) => {\n    let promises = [];\n    fills.forEach((fill, fillIndex) => {\n        if (fill.enabled) {\n            promises.push(processLayerFill({\n                page: page,\n                layer: layer,\n                fill: fill,\n                fillIndex: fillIndex,\n                sketch: sketch\n            }));\n        }\n    });\n    return Promise.all(promises);\n};\nconst processLayerBorder = ({ page, layer, border, borderIndex, sketch }) => {\n    return new Promise((resolve, reject) => {\n        switch (border.fillType) {\n            case 'Gradient':\n                processLayerBorderGradient({\n                    page: page,\n                    layer: layer,\n                    border: border,\n                    borderIndex: borderIndex,\n                    sketch: sketch\n                })\n                    .then((layerImage) => {\n                    resolve(layerImage);\n                });\n                break;\n            case 'Pattern':\n            case 'Color':\n                resolve(null);\n                break;\n        }\n    });\n};\nexport const processLayerBorders = ({ page, layer, sketch, borders }) => {\n    let promises = [];\n    borders.forEach((border, borderIndex) => {\n        if (border.enabled) {\n            promises.push(processLayerBorder({\n                page: page,\n                layer: layer,\n                border: border,\n                borderIndex: borderIndex,\n                sketch: sketch\n            }));\n        }\n    });\n    return Promise.all(promises);\n};\nconst processLayer = ({ page, layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        const layerImages = [];\n        switch (layer.type) {\n            case 'Image':\n                processImageLayerAssets({\n                    page: page,\n                    layer: layer,\n                    sketch: sketch\n                })\n                    .then((imageLayerImages) => {\n                    layerImages.push(...imageLayerImages);\n                })\n                    .finally(() => {\n                    resolve(layerImages);\n                });\n                break;\n            case 'Shape':\n            case 'ShapePath':\n                processShapeLayerAssets({\n                    page: page,\n                    layer: layer,\n                    sketch: sketch\n                })\n                    .then((shapeLayerImages) => {\n                    layerImages.push(...shapeLayerImages);\n                })\n                    .finally(() => {\n                    resolve(layerImages);\n                });\n                break;\n            case 'Group':\n                processGroupLayerAssets({\n                    page: page,\n                    layer: layer,\n                    sketch: sketch\n                })\n                    .then((groupLayerImages) => {\n                    layerImages.push(...groupLayerImages);\n                })\n                    .finally(() => {\n                    resolve(layerImages);\n                });\n                break;\n            default:\n                resolve(layerImages);\n        }\n    });\n};\nexport const processLayers = ({ page, layers, sketch }) => {\n    const promises = [];\n    layers.forEach((layer) => {\n        promises.push(processLayer({\n            page: page,\n            layer: layer,\n            sketch: sketch\n        }));\n    });\n    return Promise.all(promises);\n};\nexport const getAssets = ({ page, artboard, sketch }) => {\n    return new Promise((resolve, reject) => {\n        processLayers({\n            page: page,\n            layers: artboard.layers,\n            sketch: sketch\n        })\n            .then((layerImages) => {\n            const images = layerImages.reduce((imageArray, layerImageArray) => {\n                return [...imageArray, ...layerImageArray];\n            }, []);\n            resolve(images);\n        });\n    });\n};\nexport default getAssets;\n","import { processLayers } from './assets';\nconst processGroupLayerAssets = ({ page, layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        const layerImages = [];\n        processLayers({\n            page: page,\n            layers: layer.layers,\n            sketch: sketch\n        })\n            .then((groupLayerImages) => {\n            const images = groupLayerImages.reduce((imageArray, layerImageArray) => {\n                return [...imageArray, ...layerImageArray];\n            }, []);\n            layerImages.push(...images);\n        })\n            .finally(() => {\n            resolve(layerImages);\n        });\n    });\n};\nexport default processGroupLayerAssets;\n","import { generateImageAsset, processLayerFills, processLayerBorders } from './assets';\nconst processLayerImage = ({ page, layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        // create image layer from image date\n        const baseImage = new sketch.Image({\n            image: layer.image,\n            frame: layer.frame,\n            parent: page\n        });\n        generateImageAsset({\n            layer: baseImage,\n            sketch: sketch,\n            id: layer.id,\n            prefix: '[image]'\n        })\n            .then((imageAsset) => {\n            // remove asset artboard from page\n            baseImage.remove();\n            // return base64 image\n            resolve(imageAsset);\n        });\n    });\n};\nconst processImageLayerAssets = ({ page, layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        const { style } = layer;\n        const { fills, borders, shadows, innerShadows } = style;\n        const layerImages = [];\n        processLayerImage({\n            page: page,\n            layer: layer,\n            sketch: sketch\n        })\n            .then((layerImage) => {\n            layerImages.push(layerImage);\n            return processLayerFills({\n                page: page,\n                layer: layer,\n                sketch: sketch,\n                fills: fills\n            });\n        })\n            .then((fillImages) => {\n            const newImages = fillImages.filter(fillImage => fillImage);\n            layerImages.push(...newImages);\n            return processLayerBorders({\n                page: page,\n                layer: layer,\n                sketch: sketch,\n                borders: borders\n            });\n        })\n            .then((borderImages) => {\n            const newImages = borderImages.filter(borderImage => borderImage);\n            layerImages.push(...newImages);\n        })\n            .finally(() => {\n            resolve(layerImages);\n        });\n    });\n};\nexport default processImageLayerAssets;\n","import getArtboard from './artboard';\nimport getAssets from './assets';\nconst getStore = ({ page, artboard, sketch }) => {\n    return new Promise((resolve, reject) => {\n        // create new page for clean asset generation\n        const srmPage = new sketch.Page({\n            name: `srm.page`,\n            parent: page.parent\n        });\n        // duplicate selected artboard and set on new page\n        const srmArtboard = artboard.duplicate();\n        srmArtboard.parent = srmPage;\n        srmArtboard.frame.x = 0;\n        srmArtboard.frame.y = 0;\n        srmArtboard.background.includedInExport = true;\n        console.log('Processing Artboard');\n        getArtboard({\n            artboard: srmArtboard,\n            sketch: sketch,\n            page: page\n        })\n            .then(() => {\n            console.log('Processing Assets');\n            return getAssets({\n                page: srmPage,\n                artboard: srmArtboard,\n                sketch: sketch\n            });\n        })\n            .then(images => {\n            console.log('Assets Created');\n            // remove page\n            srmPage.remove();\n            // select original page\n            page.selected = true;\n            // return final store\n            resolve({\n                artboard: srmArtboard,\n                images: images\n            });\n        });\n    });\n};\nexport default getStore;\n","import { processLayerFills, processLayerBorders } from './assets';\nconst processShapeLayerAssets = ({ page, layer, sketch }) => {\n    return new Promise((resolve, reject) => {\n        const { style } = layer;\n        const { fills, borders, shadows, innerShadows } = style;\n        const layerImages = [];\n        processLayerFills({\n            page: page,\n            layer: layer,\n            sketch: sketch,\n            fills: fills\n        })\n            .then((fillImages) => {\n            const newImages = fillImages.filter(fillImage => fillImage);\n            layerImages.push(...newImages);\n            return processLayerBorders({\n                page: page,\n                layer: layer,\n                sketch: sketch,\n                borders: borders\n            });\n        })\n            .then((borderImages) => {\n            const newImages = borderImages.filter(borderImage => borderImage);\n            layerImages.push(...newImages);\n        })\n            .finally(() => {\n            resolve(layerImages);\n        });\n    });\n};\nexport default processShapeLayerAssets;\n"],"sourceRoot":""}